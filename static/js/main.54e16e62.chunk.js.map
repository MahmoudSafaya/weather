{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","d","Date","date","getDate","getMonth","getFullYear","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAIMA,G,MACC,oCADDA,EAEE,qDAwDOC,MArDf,WAAgB,IAAD,EAEUC,mBAAS,IAFnB,mBAEVC,EAFU,KAEHC,EAFG,OAGeF,mBAAS,IAHxB,mBAGRG,EAHQ,KAGCC,EAHD,KAkBTC,EAAI,IAAIC,KACRC,EAAI,UAAMF,EAAEG,UAAR,YAAqBH,EAAEI,WAAa,EAApC,YAAyCJ,EAAEK,eAGnD,OACE,qBAAKC,UAAmC,oBAAhBR,EAAQS,MAC9BT,EAAQS,KAAKC,KAAO,GAAM,WAAqB,MADjD,SAEE,iCACE,qBAAKF,UAAU,SAAf,SACE,uBACEG,KAAK,OACLC,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOC,QACjCA,MAAOlB,EACPmB,WA1BG,SAAAC,GACE,UAAZA,EAAIC,KACLC,MAAM,GAAD,OAAIzB,GAAJ,OAAeG,EAAf,+BAA2CH,IAC/C0B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJvB,EAAWuB,GACXzB,EAAS,IACT0B,QAAQC,IAAIF,WAsBV,qBAAKhB,UAAU,kBAAf,mEAIyB,oBAAhBR,EAAQS,KAEjB,sBAAKD,UAAU,OAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BR,EAAQ2B,KAAnC,KAA2C3B,EAAQ4B,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,SAAuBJ,IACvB,sBAAKI,UAAU,OAAf,UAAuBsB,KAAKC,MAAM/B,EAAQS,KAAKC,MAA/C,WACA,qBAAKF,UAAU,QAAf,SAAwBR,EAAQA,QAAQ,GAAGS,UAEtC,SC5CEuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54e16e62.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n// Please add you own api key \nconst api = {\n  key: 'a77310ff79aee5ffdf371098704c1e11',\n  base: 'https://api.openweathermap.org/data/2.5/weather?q='\n}\n\nfunction App() {\n\nlet [query, setQuery]  = useState('');\nconst [weather, setWeather] = useState({});\n\n\nconst search = evt => {\n  if(evt.key === 'Enter') {\n    fetch(`${api.base}${query}&units=metric&appid=${api.key}`)\n    .then(res => res.json())\n    .then(result => {\n      setWeather(result);\n      setQuery('');\n      console.log(result);\n    });\n  }\n}\n\nconst d = new Date();\nconst date = `${d.getDate()}.${d.getMonth() + 1}.${d.getFullYear()}`;\n\n\n  return (\n    <div className={(typeof weather.main != 'undefined') ? \n     (weather.main.temp > 16) ? 'app warm' : 'app' : 'app'} >\n      <main>\n        <div className=\"search\">\n          <input \n            type=\"text\" \n            placeholder=\"Search..\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          ></input>\n        </div>\n        <div className=\"landing-content\">\n          Enter date in the search input and press \"enter\" key.\n        </div>\n      \n        {(typeof weather.main != 'undefined') ? \n        (  \n        <div className=\"info\">\n        <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n        <div className=\"date\">{date}</div>\n        <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\n        <div className=\"cloud\">{weather.weather[0].main}</div>\n      </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}